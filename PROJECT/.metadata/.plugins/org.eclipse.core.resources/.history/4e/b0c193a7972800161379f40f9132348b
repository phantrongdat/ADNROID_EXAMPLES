package vn.dat.digitalonscreencontroldemo;

import org.anddev.andengine.engine.Engine;
import org.anddev.andengine.engine.camera.Camera;
import org.anddev.andengine.engine.options.EngineOptions;
import org.anddev.andengine.engine.options.EngineOptions.ScreenOrientation;
import org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy;
import org.anddev.andengine.entity.modifier.ParallelEntityModifier;
import org.anddev.andengine.entity.modifier.RotationModifier;
import org.anddev.andengine.entity.modifier.ScaleModifier;
import org.anddev.andengine.entity.modifier.SequenceEntityModifier;
import org.anddev.andengine.entity.scene.Scene;
import org.anddev.andengine.entity.scene.background.ColorBackground;
import org.anddev.andengine.entity.sprite.AnimatedSprite;
import org.anddev.andengine.entity.sprite.Sprite;
import org.anddev.andengine.entity.util.FPSLogger;
import org.anddev.andengine.opengl.texture.Texture;
import org.anddev.andengine.opengl.texture.TextureOptions;
import org.anddev.andengine.opengl.texture.region.TextureRegion;
import org.anddev.andengine.opengl.texture.region.TextureRegionFactory;
import org.anddev.andengine.opengl.texture.region.TiledTextureRegion;
import org.anddev.andengine.ui.activity.BaseGameActivity;

public class MainActivity extends BaseGameActivity {
	private static final int CAMERA_WIDTH = 480;
	private static final int CAMERA_HEIGHT = 853;

	private Texture mTextureAE;
	private TextureRegion mTextureRegionAE;
	
	private Texture mTextureGunner;
	private TiledTextureRegion mTextureRegionGunner;

	private Texture mOnScreenControlTexture;
	private TextureRegion mOnScreenControlBaseTextureRegion;
	private TextureRegion mOnScreenControlKnobTextureRegion;

	@Override
	public Engine onLoadEngine() {
		// TODO Auto-generated method stub
		Camera camera = new Camera(0, 0, CAMERA_WIDTH, CAMERA_HEIGHT);
		EngineOptions engineOptions = new EngineOptions(true, ScreenOrientation.PORTRAIT,
				new RatioResolutionPolicy(CAMERA_WIDTH, CAMERA_HEIGHT), camera);

		return new Engine(engineOptions);
	}

	@Override
	public void onLoadResources() {
		// TODO Auto-generated method stub

		mTextureAE=new Texture(512,512,TextureOptions.BILINEAR_PREMULTIPLYALPHA);
		mTextureRegionAE=TextureRegionFactory.createFromAsset(mTextureAE, this, "gfx/ae.jpg",0,0);
		mTextureGunner = new Texture(256, 256, TextureOptions.BILINEAR_PREMULTIPLYALPHA);
		mTextureRegionGunner = TextureRegionFactory.createTiledFromAsset(mTextureGunner, this, "gfx/hoangtu.png", 0, 0,
				3, 4);
		mOnScreenControlTexture = new Texture(256, 256, TextureOptions.BILINEAR_PREMULTIPLYALPHA);
		mOnScreenControlBaseTextureRegion = TextureRegionFactory.createFromAsset(mOnScreenControlTexture, this,
				"gfx/onscreen_control_base.png", 0, 0);
		mOnScreenControlKnobTextureRegion = TextureRegionFactory.createFromAsset(mOnScreenControlTexture, this,
				"gfx/onscreen_control_knob.png", 128, 0);

		this.mEngine.getTextureManager().loadTextures(mTextureAE,mTextureGunner, mOnScreenControlTexture);
	}

	@Override
	public Scene onLoadScene() {
		// TODO Auto-generated method stub
		this.mEngine.registerUpdateHandler(new FPSLogger());
		Scene scene = new Scene();
		scene.setBackground(new ColorBackground(0.25f, 0.5f, 0.6f));
		
		Sprite mSpriteAE=new Sprite(0, 0, mTextureRegionAE);
		mSpriteAE.registerEntityModifier(new SequenceEntityModifier(
				new ParallelEntityModifier(
						new RotationModifier(0.25f, 0, 360), 
						new ScaleModifier(0.25f, 0.2f, 1.2f)),new ScaleModifier(0.25f, 1.2f, 1f)));
		
		AnimatedSprite mSpriteGunner = new AnimatedSprite(CAMERA_WIDTH / 2, CAMERA_HEIGHT / 2+100, mTextureRegionGunner);
		mSpriteGunner.animate(new long[] { 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,200}, 0, 11, true);
		mSpriteGunner.setScale(2.5f);

		scene.attachChild(mSpriteAE);
		scene.attachChild(mSpriteGunner);
		return scene;

	}

	@Override
	public void onLoadComplete() {
		// TODO Auto-generated method stub

	}
}
